name: Build and deploy Spring app
on: 
    push:
        branches:
            - main
        pull_request:
            types: [opened, synchronize, reopened]
        permissions:
            pull-requests: write    
            contents: read
            metadata: read
            checks: write    
jobs:
    build-deploy: 
        name: Build and deploy spring boot application
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            
            - name: Setup JDK 17
              uses: actions/setup-java@v4
              with: 
                  distribution: 'corretto'
                  java-version: 17
                  
            - name: Unit test
              run: mvn -B test --file pom.xml
              
            - name: Build the application
              run: |
                   mvn clean
                   mvn -B package --file pom.xml
#env:
#                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            - name: Build and analyze SonarQube
              run: 
                  mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.8.0.2131:sonar -Dsonar.organization=ansarbachir -Dsonar.projectKey=ansarbachir:demo -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              
            - name: login to Docker hub
              uses: docker/login-action@v1
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
              
            - name: Push to docker hub
              uses: docker/build-push-action@v2
              with:
                  context: .
                  dockerfile: Dockerfile
                  push: true
                  tags: ${{secrets.DOCKER_USERNAME}}/spring-boot-application:today
            
            - name: Run docker container      
              run: |
                  docker run -d -p 8089:8080 ${{secrets.DOCKER_USERNAME}}/spring-boot-application:today